# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Github Pages

on:
  pull_request:
    types: [closed]
  push:
    branches: [main,milton,master]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    environment: "PROD"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # Remove to check workflow
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Sanity Check
        run: cd _site/docs/diving/ && ls -altr

      # Begin encryption code.
      # This portion of the build job was written by Evan Baldonado (EvanBaldonado.com). Please do not remove this comment.
      # Note: this only encrypts .html pages and not any of the corresponding assets.
      - name: Encrypt pages with PageCrypt
        run: |
          chmod 777 -R _site/
          npm i -D pagecrypt
          
          sudo npx pagecrypt "_site/docs/medical.html" "_site/docs/medical.html" "$PROD_MEDICIAL_PASSWORD" --force

          for file in _site/docs/diving/*.html; do
            sudo npx pagecrypt "$file" "$file" "$PROD_DIVING_PASSWORD" --force
          done
        env:
          NODE_ENV: production
          PROD_MEDICIAL_PASSWORD: ${{ secrets.PROD_MEDICIAL_PASSWORD }}
          PROD_DIVING_PASSWORD: ${{ secrets.PROD_DIVING_PASSWORD }}
      # End encryption code.

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3.0.1

      

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4